// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Post {
  id       String    @id @db.VarChar(128)
  views    BigInt    @default(1)
  likedBy  User[]    @relation("LikedBy")
  savedBy  User[]    @relation("SavedBy")
  comments Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  comment   String   @db.VarChar(255)
  postId    String
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([postId])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  likedPosts    Post[]    @relation("LikedBy")
  savedPosts    Post[]    @relation("SavedBy")
}

// model UsersOnPosts {
//   post   Post   @relation(fields: [postId], references: [id])
//   postId String
//   user   User   @relation(fields: [userId], references: [id])
//   userId String

//   @@id([postId, userId])
//   @@index([userId, postId])
// }
