import type { GetStaticProps, NextPage } from 'next';
import type { PostData, categoryData } from '../../@types/posts';
import Head from 'next/head';
import { GetStaticPaths } from 'next';
import { getData } from '../../contentful';
import { sortedPosts } from '../../utils/posts';
import PostTile from '../../components/PostTile';

type PostPropTypes = {
  posts: PostData[];
  category: categoryData;
};

const Category: NextPage<PostPropTypes> = ({ category, posts }) => {
  const relevantPosts = posts.filter((post) =>
    post.categories.some(
      (cat) => cat.fields.name.toLowerCase() === category.toLowerCase()
    )
  );

  return (
    <>
      <Head>
        <title>{`nac blog: ${category}`}</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <div className="flex max-w-2xl flex-col">
        {sortedPosts(relevantPosts).map((post) => (
          <PostTile key={post.title} post={post} />
        ))}
      </div>
    </>
  );
};

export default Category;

export const getStaticPaths: GetStaticPaths = async () => {
  const { categories } = await getData();

  return {
    paths: categories.map((category) => {
      return {
        params: {
          category: category.toLowerCase(),
        },
      };
    }),
    fallback: false,
  };
};

export const getStaticProps: GetStaticProps = async ({ params }) => {
  const { posts, categories } = await getData();

  return {
    props: {
      posts,
      category: categories.filter(
        (category: categoryData) => category.toLowerCase() === params!.category
      )[0],
      categories,
    },
    revalidate: 1,
  };
};
