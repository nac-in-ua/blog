import type { GetStaticProps, NextPage } from 'next';
import type { IPostData, ICategoryData } from '../../@types/posts';
import Head from 'next/head';
import { GetStaticPaths } from 'next';
import { getData, getNavbar } from '../../hygraph/getData';
import { sortedPosts } from '../../utils/posts';
import PostTile from '../../components/PostTile';
import { EVERYTHING } from '../../utils/categories';

type PostPropTypes = {
  posts: IPostData[];
  category: ICategoryData;
};

const Category: NextPage<PostPropTypes> = ({ category, posts }) => {
  const relevantPosts = posts.filter((post) => {
    if (category.slug === EVERYTHING.slug) {
      return posts;
    }
    return post.category.slug === category.slug;
  });

  return (
    <>
      <Head>
        <title>{`nac blog: ${category.name}`}</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <div className="flex flex-col">
        {sortedPosts(relevantPosts).map((post) => (
          <PostTile key={post.title} post={post} />
        ))}
      </div>
    </>
  );
};

export default Category;

export const getStaticPaths: GetStaticPaths = async () => {
  const { categories } = await getNavbar('Main');

  return {
    paths: categories.map((category: ICategoryData) => {
      return {
        params: {
          category_slug: category.slug,
        },
      };
    }),
    fallback: false,
  };
};

export const getStaticProps: GetStaticProps = async ({ params }) => {
  const { posts } = await getData();
  const { categories } = await getNavbar('Main');

  return {
    props: {
      posts,
      category: categories.filter(
        (category: ICategoryData) => category.slug === params!.category_slug
      )[0],
      categories,
    },
    revalidate: 1,
  };
};
