import type { GetStaticProps, NextPage } from 'next';
import Head from 'next/head';
import {
  IPost,
  IPostFields,
  ICategory,
  ICategoryFields,
} from '../@types/generated/contentful';
import client from '../contentful/contenful';
import PostTile from '../components/PostTile';
import { UserIcon } from '@heroicons/react/outline';
import Link from 'next/link';
import { sortedPosts } from '../utils/posts';

type HomePropsType = {
  posts: IPost[];
  categories: ICategory[];
};

const Home: NextPage<HomePropsType> = ({ posts, categories }) => {
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex justify-center bg-slate-300 text-xl uppercase py-1 font-heading">
        nac development
      </div>
      <div className="sticky top-0 bg-white z-10 shadow border-b mb-6">
        <div className="m-auto max-w-2xl py-2 flex h-12">
          <nav className="flex flex-1 self-stretch items-center">
            {categories.map((category) => (
              <Link
                key={category.fields.name}
                href={`/categories/${category.fields.name?.toLowerCase()}`}
              >
                <a className="flex mx-2 cursor-pointer text-gray-700 hover:text-gray-500">
                  {category.fields.name}
                </a>
              </Link>
            ))}
          </nav>
          <div className="flex text-red-500 items-center">
            login
            <UserIcon className="h-5 w-5" />
          </div>
        </div>
      </div>
      <main className="flex justify-center">
        <div className="flex max-w-2xl flex-col">
          {sortedPosts(posts).map((post) => (
            <PostTile key={post.sys.id} post={post} />
          ))}
        </div>
      </main>
    </div>
  );
};

export default Home;

export const getStaticProps: GetStaticProps = async () => {
  const postEntries = await client.getEntries<IPostFields>({
    content_type: 'post',
  });

  const categoryEntries = await client.getEntries<ICategoryFields>({
    content_type: 'category',
  });

  return {
    props: {
      posts: postEntries.items,
      categories: categoryEntries.items,
    },
    revalidate: 1,
  };
};
